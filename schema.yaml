x-google-marketplace:
  schemaVersion: v2
  applicationApiVersion: v1beta1
  publishedVersion: "$TAG"
  publishedVersionMetadata:
    releaseNote: >-
      A regular update.
    releaseTypes:
      - Feature
    recommended: false
  images:
    '':
      properties:
        operator.image.repository:
          type: REPO_WITH_REGISTRY
        operator.image.tag:
          type: TAG
    usagemeter:
      properties:
        usagemeter.image:
          type: REPO_WITH_REGISTRY
        usagemeter.tag:
          type: TAG
    eckopertator:
      properties:
        eckoperator.image:
          type: REPO_WITH_REGISTRY
        eckoperator.tag:
           type: TAG
    bitnami:
      properties:
        bitnami.image:
          type: REPO_WITH_REGISTRY
        bitnami.tag:
           type: TAG
    tctl:
      properties:
        tctl.image:
          type: REPO_WITH_REGISTRY
        tctl.tag:
           type: TAG
    registry.opensource.zalan.do/acid/postgres-operator:
      properties:
        registry.opensource.zalan.do/acid/postgres-operator.image:
          type: REPO_WITH_REGISTRY
        registry.opensource.zalan.do/acid/postgres-operator.tag:
           type: TAG
    registry.opensource.zalan.do/acid/spilo-13:
      properties:
        registry.opensource.zalan.do/acid/spilo-13.image:
          type: REPO_WITH_REGISTRY
        registry.opensource.zalan.do/acid/spilo-13.tag:
           type: TAG
    bitnami/kubectl:
      properties:
        bitnami/kubectl.image:
          type: REPO_WITH_REGISTRY
        bitnami/kubectl.tag:
           type: TAG
    docker.elastic.co/elasticsearch/elasticsearch:
      properties:
        docker.elastic.co/elasticsearch/elasticsearch.image:
          type: REPO_WITH_REGISTRY
        docker.elastic.co/elasticsearch/elasticsearch.tag:
           type: TAG
    docker.io/bitnami/kubectl:
      properties:
        docker.io/bitnami/kubectl.image:
          type: REPO_WITH_REGISTRY
        docker.io/bitnami/kubectl.tag:
           type: TAG
    quay.io/jetstack/cert-manager-cainjector:
      properties:
        quay.io/jetstack/cert-manager-cainjector.image:
          type: REPO_WITH_REGISTRY
        quay.io/jetstack/cert-manager-cainjector.tag:
           type: TAG
    quay.io/jetstack/cert-manager-controller:
      properties:
        quay.io/jetstack/cert-manager-controller.image:
          type: REPO_WITH_REGISTRY
        quay.io/jetstack/cert-manager-controller.tag:
           type: TAG
    quay.io/jetstack/cert-manager-webhook:
      properties:
        quay.io/jetstack/cert-manager-webhook.image:
          type: REPO_WITH_REGISTRY
        quay.io/jetstack/cert-manager-webhook.tag:
           type: TAG

properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE
  operator.serviceAccountName:
    type: string
    title: Service account for operator
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account for operator
        roles:
        - type: ClusterRole
          rulesType: CUSTOM
          rules:
            - apiGroups: ["apiextensions.k8s.io"]
              resources: ["customresourcedefinitions"]
              verbs: ["get"]
        - type: Role
          rulesType: CUSTOM
          rules:         
            - apiGroups: ["rbac.authorization.k8s.io", ""]
              resources: ["roles", "serviceaccounts", "rolebindings"]
              verbs: ["*"]
            - apiGroups:
                - "*"
              resources:
                - "*"
              verbs:
                - "*"
            - apiGroups: [""]
              resources: ["secrets"]
              verbs: ["*"]
            - apiGroups: [""]
              resources: ["endpoints"]
              verbs: ["get", "list", "watch"]
            - apiGroups: [""]
              resources: ["events"]
              verbs: ["create"]
            - apiGroups: ["apps"]
              resources: ["deployments", "statefulsets", "replicasets"]
              verbs: ["*"]
            - apiGroups: ["policy"]
              resources: ["poddisruptionbudgets"]
              verbs: ["create", "delete", "get"]
            - apiGroups: [""]
              resources: ["configmaps"]
              verbs: ["create", "delete", "get" , "update", "list", "watch"]
            - apiGroups: [""]
              resources: ["persistentvolumeclaims"]
              verbs: ["create", "delete", "get" , "update"]
            # needed rbac rules for services controller
            - apiGroups: [""]
              resources: ["pods"]
              verbs: ["get", "watch", "list", "update", "patch"]
            - apiGroups: [""]
              resources: ["services"]
              verbs: ["get", "watch", "list", "update", "patch", "create", "delete"]
            - apiGroups: ["extensions"]
              resources: ["ingresses"]
              verbs: ["*"]            
  CRJobServiceAccount:
    type: string
    title: Service account for custom resources
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account for custom resources
        roles:
        - type: ClusterRole
          rulesType: CUSTOM
          rules:
            - apiGroups: ["*", "apiextensions.k8s.io"]
              resources: ["*"]
              verbs: ["*"]
  reportingSecret:
    type: string
    x-google-marketplace:
      type: REPORTING_SECRET
  operator.storageClass:
    title: Storage Class
    type: string
    description: Storage class
    default: standard
  CRDJobServiceAccount:
    type: string
    title: Service account for custom resource definitions
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account for custom resource definitions
        roles:
        - type: ClusterRole
          rulesType: CUSTOM
          rules:
            - apiGroups: ["apiextensions.k8s.io"]
              resources: ["customresourcedefinitions"]
              verbs: ["get","list","create", "patch"]
  deployerHelm.image:
    type: string
    x-google-marketplace:
      type: DEPLOYER_IMAGE
required:
- name
- namespace
- operator.storageClass

